<?xml version="1.0" encoding="UTF-8"?>
<!--
###############################################################################
#
# Copyright (c) 2005- Shinji Kashihara. All rights reserved.
# This program and the accompanying materials except for /lib directory are
# made available under the terms of the Eclipse Public License v1.0 which
# accompanies this distribution, and is available at /epl-v10.html.
#
###############################################################################
#
# IDEA Pleiades アスペクト設定ファイル
#
###############################################################################
-->
<pleiades>

	<!-- Pleades runtime パッケージ -->
	<property name="pleiades" value="jp.sourceforge.mergedoc.pleiades.runtime"/>

	<!-- 翻訳クラス -->
	<property name="translation.class" value="?{pleiades}.resource.Translations"/>

	<!-- 計測クラス -->
	<property name="analyses.class" value="?{pleiades}.Analyses"/>

	<!--
	###########################################################################
	  IDEA 機能拡張
	###########################################################################
	-->

	<!-- ファイル > キャッシュの破棄 をトリガーに次回起動時の Pleiades キャッシュ破棄も指示 -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$_ = $proceed($$);
			?{translation.class}.invalidateCache();
		]]></advice>

		<jointPoint className="com.intellij.openapi.vfs.newvfs.persistent.FSRecords" methodName="invalidateCaches">
			<includeWhere className="com.intellij.ide.actions.InvalidateCachesAction"/>
		</jointPoint>

	</pointCut>

	<!--
	###########################################################################
	  翻訳：メソッド呼び出し (editPoint="call")
	###########################################################################
	-->

	<!-- 翻訳 (after) Java リソースバンドル -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$_ = $proceed($$);
			if ($1 == null)
				;
			// 除外キー: ツール・ウィンドウ ID
			else if ($1.startsWith("tool.window.name.") || $1.equals("android.logcat.title"))
				;
			// 除外キー: 設定 > ビルド > ビルド・ツール (設定が表示されなくなるのを回避)
			else if ($1.equals("configurable.group.build.tools.settings.parent"))
				;
			else
				$_ = ?{translation.class}.translateUnderscoreMnemonic($_, null);
		]]></advice>

		<jointPoint className="java.util.ResourceBundle" methodName="getString">

			<!-- 呼び出し元による除外：AWT ショートカットキー名 (Shift、Home など) -->
			<excludeWhere className="java.awt.Toolkit"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (after) ニーモニックなし -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$_ = $proceed($$);
			$_ = ?{translation.class}.translateIgnoreMnemonic($_, null);
		]]></advice>

		<!-- HTML ファイルのロード（用途によりサイズが大きいため限定しておく）-->
		<jointPoint className="com.intellij.util.ResourceUtil" methodName="loadText">

			<!-- 呼び出し元による限定：今日のヒント -->
			<includeWhere className="com.intellij.ide.util.TipUIUtil"/>

			<!-- 呼び出し元による限定：インスペクション -->
			<includeWhere className="com.intellij.codeInspection"/>

		</jointPoint>

	</pointCut>

	<!--
	before 翻訳除外識別子を付加 (execution before の setText で識別子削除)
	excludeWhere はスタックトレースでコスト高のため、頻繁に利用されるラベルなどで使用 (安易に多用しないように注意)
	-->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($1 != null && !$1.isEmpty())
				$1 = "%PLEIADES_EXCLUDE%" + $1;
			$_ = $proceed($$);
		]]></advice>

		<!-- Swing ラベル -->
		<jointPoint className="javax.swing.JLabel" methodName="setText">

			<!-- 呼び出し元による限定：起動時のプロジェクト選択画面 -->
			<includeWhere className="com.intellij.openapi.wm.impl.welcomeScreen.NewRecentProjectPanel"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 特定の訳: Gist の作成ダイアログ上のボタン -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($1 != null && $1.equals("Private"))
				$1 = "プライベート";
			$_ = $proceed($$);
		]]></advice>

		<jointPoint className="javax.swing.AbstractButton" methodName="setText">

			<includeWhere className="org.jetbrains.plugins.github.ui.GithubCreateGistPanel"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			// 除外: ツール > Web サービス > Axis
			if (!"_Axis".equals($1))
				$1 = ?{translation.class}.translateUnderscoreMnemonic($1, null);
			$_ = $proceed($$);
		]]></advice>

		<!-- ツール > デプロイ などのアクション・ラベル、引数 1 個 (注意：頻繁に呼び出されるためトレースは使用しない) -->
		<jointPoint className="com.intellij.openapi.actionSystem.Presentation" methodName="setText"
				descriptor="(Ljava/lang/String;)V">

			<!-- 呼び出し元による除外：プロジェクトビュー > モジュールの移動 > モジュール名 (別箇所でも除外あり) -->
			<excludeWhere className="com.intellij.ide.projectView.impl.MoveModuleToGroup"/>

			<!-- 呼び出し元による除外：ようこそ画面のプロジェクトのグループ移動 (別箇所でも除外あり) -->
			<excludeWhere className="com.intellij.openapi.wm.impl.welcomeScreen.MoveProjectToGroupAction"
				methodName="MoveProjectToGroupAction"/>

			<!-- 呼び出し元による除外：上部の Gradle モジュール選択コンボ > 保管 -->
			<excludeWhere className="com.intellij.execution.actions.RunConfigurationsComboBoxAction"/>

			<!-- 呼び出し元による除外：ファイル > 最近使ったファイルを開く > (プロジェクト名) -->
			<!-- Pleiades 未使用状態でもアンダーバーがニーモニックとして処理される不具合あり -->
			<excludeWhere className="com.intellij.ide.ReopenProjectAction"/>

		</jointPoint>

		<!-- メニューなどのアクション・ラベル、引数 2 個 (注意：頻繁に呼び出されるためトレースは使用しない) -->
		<jointPoint className="com.intellij.openapi.actionSystem.Presentation" methodName="setText"
				descriptor="(Ljava/lang/String;Z)V">

			<!-- 呼び出し元による限定：モジュール右クリック > 再ビルド モジュール '(モジュール名)' -->
			<includeWhere className="com.intellij.compiler.actions.CompileAction"/>

			<!-- 呼び出し元による限定：データベース右クリック > Dump Data to File -->
			<includeWhere className="com.intellij.database.run.actions.DumpAction"/>

			<!-- 呼び出し元による限定：Branch 'ブランチ名' -->
			<includeWhere className="git4idea.ui.branch.GitLogBranchOperationsActionGroup"/>

			<!-- 呼び出し元による限定：編集 > Emoji & Symbols -->
			<includeWhere className="com.intellij.ide.actions.MacEmojiAndSymbolsInputAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) ニーモニックなし -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
			$_ = $proceed($$);
		]]></advice>

		<!-- JDK メッセージ・フォーマット翻訳 -->
		<jointPoint className="java.text.MessageFormat" methodName="format"
					descriptor="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"/>

		<!-- JDK 文字列フォーマット翻訳 (プラグイン lib の jar に対する NotFoundException 回避のため限定が必要) -->
		<jointPoint className="java.lang.String" methodName="format"
					descriptor="(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;">

			<!-- 呼び出し元による限定：コミットパネル > %s %d of %d -->
			<includeWhere className="com.intellij.openapi.vcs.changes.ui.CommitLegendPanel"/>

			<!-- 呼び出し元による限定：下部エンコーディングのツールチップ -->
			<includeWhere className="com.intellij.openapi.wm.impl.status.EncodingPanel"/>

			<!-- 呼び出し元による限定：ブランチとの比較ダイアログ・タイトルなど -->
			<includeWhere className="com.intellij.openapi.vcs.history"/>

			<!-- 呼び出し元による限定：Android ビルド・バリアントのダイアログ・タイトルなど -->
			<includeWhere className="com.android.tools.idea.gradle.variant.view"/>

		</jointPoint>

		<!-- Swing エディター・ペイン (setEditable に false があとで設定されている場合に対応) -->
		<jointPoint className="javax.swing.JEditorPane" methodName="setText">

			<!-- 呼び出し元による限定：更新ダイアログのバージョンアップ内容 -->
			<includeWhere className="com.intellij.openapi.updateSettings.impl.AbstractUpdateDialog"/>

		</jointPoint>

		<!-- プロジェクト・ビューのノード名 -->
		<jointPoint className="com.intellij.ide.projectView.PresentationData" methodName="setPresentableText">

			<!-- 呼び出し元による限定：Module Dependencies -->
			<includeWhere className="com.intellij.ide.projectView.impl.nodes.ModuleListNode"/>

			<!-- 呼び出し元による限定：Android > Gradle Scripts -->
			<includeWhere className="com.android.tools.idea.navigator.nodes.AndroidBuildScriptsGroupNode"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) ニーモニックなし、String 判定 -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($1 instanceof String)
				$1 = ?{translation.class}.translateIgnoreMnemonic((String) $1, null);
			$_ = $proceed($$);
		]]></advice>

		<!-- Swing ツリーノード -->
		<jointPoint className="javax.swing.tree.DefaultMutableTreeNode" methodName="DefaultMutableTreeNode"
				descriptor="(Ljava/lang/Object;)V">

			<!-- 呼び出し元による限定：Android モデルビュー > 進捗メッセージ -->
			<includeWhere className="com.android.tools.idea.gradle.AndroidModelView" methodName="updateContents"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) ニーモニックなし、br タグ分割 -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, ?{JOINT_POINT}, "<br>");
			$_ = $proceed($$);
		]]></advice>

		<!-- JetBrain ラベル -->
		<jointPoint className="com.intellij.ui.components.JBLabel" methodName="setText">

			<!-- 呼び出し元による限定：AVD の API レベル選択のバージョン別機能表示ダイアログ -->
			<includeWhere className="com.android.tools.idea.npw.ChooseApiLevelDialog"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 複数形変換を無効にして翻訳 -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$_ = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- 文章中の files や directories などが先に翻訳されないように限定する -->
		<jointPoint className="com.intellij.openapi.util.text.StringUtil" methodName="pluralize">

			<!-- 呼び出し元による限定：インスペクション結果 (右ペイン) > n problems -->
			<includeWhere className="com.intellij.codeInspection.ui.QuickFixPreviewPanelFactory"/>

			<!-- 呼び出し元による限定：検索結果ビューで 出現箇所s になるのを抑止するために先に翻訳 -->
			<includeWhere className="com.intellij.usages.impl.UsageViewTreeCellRenderer"/>
			<includeWhere className="com.intellij.usages.impl.PreviewUsageAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) キーマップ右クリック -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($1 != null && $1.startsWith("Remove") && !$1.contains("Abbreviation"))
				$1 = $1.replaceFirst("Remove (.+)", "$1 の除去");
			$_ = $proceed($$);
		]]></advice>

		<jointPoint className="com.intellij.openapi.project.DumbAwareAction" methodName="DumbAwareAction"
					descriptor="(Ljava/lang/String;)V">

			<includeWhere className="com.intellij.openapi.keymap.impl.ui.KeymapPanel"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 2 引数) ニーモニックなし -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
			$_ = $proceed($$);
		]]></advice>

		<!-- ショートカット検索 -->
		<jointPoint className="com.intellij.ui.speedSearch.SpeedSearchUtil" methodName="appendColoredFragments">

			<!-- 呼び出し元による限定：アクション検索 -->
			<includeWhere className="com.intellij.ide.util.gotoByName.GotoActionModel"/>

		</jointPoint>

		<!-- 検索ユーティリティー -->
		<jointPoint className="com.intellij.ide.ui.search.SearchUtil" methodName="appendFragments">

			<!-- 呼び出し元による限定：インテンションダイアログ > ツリーのインテンショングループ名 -->
			<includeWhere className="com.intellij.codeInsight.intention.impl.config.IntentionSettingsTree"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 2 引数の可変長引数) -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($2 != null && $2.length > 0)
				$2 = ?{translation.class}.translate($2, null);
			$_ = $proceed($$);
		]]></advice>

		<!-- リソースバンドルの埋め込み引数フォーマット (インテンションの使用可不可切り替えメッセージ) -->
		<!-- モジュール名除外が多すぎるため、除外できるように使用箇所に近い部分に限定
		<jointPoint className="com.intellij.BundleBase" methodName="format"/>
		-->
		<jointPoint className="com.intellij.codeInsight.CodeInsightBundle" methodName="message">

			<!-- 呼び出し元による除外：クイックドキュメントのタイトル埋め込みクラス名 -->
			<excludeWhere className="com.intellij.codeInsight.documentation.DocumentationManager"/>

			<!-- 呼び出し元による除外：Android Studio クイックドキュメント Javadoc 内のクラス名 -->
			<excludeWhere className="com.intellij.codeInsight.javadoc.JavaDocInfoGenerator"/>

			<!-- 呼び出し元による除外：モジュール右クリック > インポートの再編成のモジュール名 -->
			<excludeWhere className="com.intellij.codeInsight.actions.OptimizeImportsAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 2 引数の可変長引数の 1 つ目) -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($2 != null && $2.length > 0)
				$2[0] = ?{translation.class}.translateIgnoreMnemonic($2[0], null);
			$_ = $proceed($$);
		]]></advice>

		<jointPoint className="com.intellij.openapi.vcs.VcsBundle" methodName="message">

			<!-- 呼び出し元による限定：VCS > Projectの更新 -->
			<includeWhere className="com.intellij.openapi.vcs.update.ActionInfo"/>

		</jointPoint>

		<jointPoint className="com.intellij.execution.ExecutionBundle" methodName="message">

			<!-- 呼び出し元による限定：設定 > キーマップ > {0} context configuration -->
			<includeWhere className="com.intellij.execution.actions.RunContextAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 2 引数の可変長引数の 2 つ目) -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			if ($2 != null && $2.length == 2)
				$2[1] = ?{translation.class}.translate($2[1], null);
			$_ = $proceed($$);
		]]></advice>

		<!-- コードインサイト・メッセージ・バンドル -->
		<jointPoint className="com.intellij.codeInsight.daemon.DaemonBundle" methodName="message">

			<!-- 呼び出し元による限定：エディター右上 > エラー、警告数ポップアップ -->
			<includeWhere className="com.intellij.codeInsight.daemon.impl.TrafficLightRenderer"/>

		</jointPoint>

	</pointCut>

	<!--
	###########################################################################
	  翻訳：メソッド実行 (editPoint="execution")
	###########################################################################
	-->
	<!--
	===========================================================================
	  before
	===========================================================================
	-->

	<!-- Swing ニーモニック特定文字の存在しない n 番目指定で例外が発生するため無効化 -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = -1;
		]]></advice>

		<jointPoint className="javax.swing.AbstractButton" methodName="setDisplayedMnemonicIndex"/>
		<jointPoint className="javax.swing.JLabel" methodName="setDisplayedMnemonicIndex"/>

	</pointCut>

	<!-- プロジェクトのウィンドウ id の NPE 抑止 (before) 呼び出しトレースによる除外なし -->
	<!-- ResourceBundle でウィンドウ ID を除外したことにより不要 2017.02.01
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($1 == null) $1 = "ProjectPane";
		]]></advice>

		<jointPoint className="com.intellij.ide.projectView.impl.ProjectViewImpl" methodName="getProjectViewPaneById"/>

	</pointCut>
	-->

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translate($1, null);
		]]></advice>

		<!-- JetBrain メニュー (Android モニター右クリック > 最近の検索なし) - 除外が必要な可能性あり -->
		<jointPoint className="com.intellij.openapi.ui.JBMenuItem" methodName="JBMenuItem"/>

		<!-- Swing タブパネル -->
		<jointPoint className="javax.swing.JTabbedPane" methodName="insertTab"/>

		<!-- タブパネル (上記以外 Other、Options など) -->
		<jointPoint className="com.intellij.ui.JBTabsPaneImpl" methodName="insertTab"/>

		<!-- Mac 固有メニュー (合わせて info.plist の English を Japanese にする) -->
		<jointPoint className="com.intellij.ui.mac.foundation.Foundation" methodName="nsString"/>

		<!-- リンク・ラベル -->
		<jointPoint className="com.intellij.ui.components.labels.LinkLabel" methodName="LinkLabel"
					descriptor="(Ljava/lang/String;Ljavax/swing/Icon;)V"/>

		<!-- HTML リンク・ラベル -->
		<jointPoint className="com.intellij.ui.HyperlinkLabel" methodName="setHtmlText"/>

		<!-- 選択肢全般 -->
		<jointPoint className="com.intellij.ide.ui.search.OptionDescription" methodName="OptionDescription"
			descriptor="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>

		<!-- ターミナル右クリック -->
		<jointPoint className="com.jediterm.terminal.ui.TerminalAction" methodName="TerminalAction"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外なし、ニーモニックなし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- アクションホバー時の左下メッセージ -->
		<jointPoint className="com.intellij.openapi.actionSystem.Presentation" methodName="setDescription"/>

		<!-- フレームのタイトル (Android AVD マネージャーなど) -->
		<jointPoint className="com.intellij.openapi.ui.FrameWrapper" methodName="setTitle"/>

		<!-- ステータスバーのテキストパネル (Android ステータスバー > コンテキスト など) -->
		<jointPoint className="com.intellij.openapi.wm.impl.status.TextPanel" methodName="setText"/>

		<!-- モジュール設定のツリー -->
		<jointPoint className="com.intellij.ui.SeparatorWithText" methodName="setCaption"/>

        <!-- パネルが空のときのメッセージ -->
		<jointPoint className="com.intellij.util.ui.StatusText" methodName="setText"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;)Lcom/intellij/util/ui/StatusText;"/>
		<jointPoint className="com.intellij.util.ui.StatusText" methodName="appendText"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;Ljava/awt/event/ActionListener;)Lcom/intellij/util/ui/StatusText;"/>

		<!-- クラス、シンボルの検索結果タイトル -->
		<jointPoint className="com.intellij.ide.util.gotoByName.ChooseByNameBase" methodName="setFindUsagesTitle"/>

		<!-- リファクタリングができない場合のエラーツールチップ -->
		<jointPoint className="com.intellij.refactoring.RefactoringBundle" methodName="getCannotRefactorMessage"/>

		<!-- 分析 > データフロー分析ダイアログのタイトル -->
		<jointPoint className="com.intellij.slicer.SliceManager" methodName="getElementDescription"/>

		<!-- プロジェクト・ビューのノード名の右グレー文字 -->
		<jointPoint className="com.intellij.ide.projectView.PresentationData" methodName="setLocationString"/>

		<!-- パス内検索ポップアップ > String to find is empty -->
		<jointPoint className="com.intellij.openapi.ui.ValidationInfo" methodName="ValidationInfo"/>

		<!-- データベースコンソール > 抽出プルダウン (省略される前に翻訳) -->
		<jointPoint className="com.intellij.database.run.actions.ChooseExtractorAction" methodName="updateText"/>

		<jointPoint className="com.intellij.codeInsight.hint.HintUtil" methodName="prepareHintText"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/HintHint;)Ljava/lang/String;"/>

		<!-- Android エディター上の警告ホバー (Annotation では HTML 化されているため前処理) -->
		<jointPoint className="com.android.tools.lint.detector.api.TextFormat" methodName="convertTo"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外なし、ニーモニックなし、グレー文字、: より前部分-->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($2 == com.intellij.ui.SimpleTextAttributes.GRAY_ATTRIBUTES)
				$1 = ?{translation.class}.translateBefore($1, null, ":");
		]]></advice>

		<!-- Android プロジェクト・ビュー > Gradle スクリプト > ノード名の右グレー文字 -->
		<jointPoint className="com.intellij.ide.projectView.PresentationData" methodName="addText"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;)V"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外なし、ニーモニックなし、グレー文字 -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($3 == com.intellij.ui.SimpleTextAttributes.GRAY_ATTRIBUTES)
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- データベース・ビュー > その他のスキーマ -->
		<jointPoint className="com.intellij.ide.util.treeView.PresentableNodeDescriptor$ColoredFragment"
					methodName="ColoredFragment"
					descriptor="(Ljava/lang/String;Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;)V"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外あり -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			final String PREFIX = "%PLEIADES_EXCLUDE%";
			if ($1 == null)
				;
			else if ($1.startsWith(PREFIX))
				$1 = $1.substring(PREFIX.length());
			else if ($1.endsWith("..."))
				$1 = ?{translation.class}.translate($1, null); // 末尾 ... はトレースさせない
			else
				$1 = ?{translation.class}.translate($1, ?{JOINT_POINT});
		]]></advice>

		<!-- Swing ラベル -->
		<jointPoint className="javax.swing.JLabel" methodName="setText">

			<!-- 呼び出しトレースによる除外：Swing テーブル (モジュールのインポート一覧) -->
			<excludeTrace className="javax.swing.JTable"/>

			<!-- 呼び出しトレースによる除外：設定 > エディター > コードスタイル > プロパティ > カスタムスキーム選択コンボ -->
			<excludeTrace className="javax.swing.plaf.basic.BasicComboBoxRenderer"/>

			<!-- 呼び出しトレースによる除外：設定 > ビルド〜 > デバッガー > データビュー > JavaScript > 除外プロパティーリスト -->
			<excludeTrace className="javax.swing.DefaultListCellRenderer"/>

			<!-- 呼び出しトレースによる除外：起動時のプロジェクト選択画面 => 翻訳除外識別子付与に変更 -->
			<!--<excludeTrace className="com.intellij.openapi.wm.impl.welcomeScreen.NewRecentProjectPanel"/>-->

			<!-- 呼び出しトレースによる除外：データベース > 結果 > テーブルヘッダ -->
			<excludeTrace className="com.intellij.database.run.ui.TableResultView"/>

			<!-- 呼び出しトレースによる除外：Gradle タスク作成時のモジュール選択コンボ -->
			<excludeTrace className="com.intellij.openapi.ui.ComboBoxWithWidePopup"/>

			<!-- 呼び出しトレースによる除外：Gradle 実行ツールウィンドウのタイトル -->
			<excludeTrace className="com.intellij.execution.ui.RunContentManagerImpl"/>

			<!-- 呼び出しトレースによる除外：右上の Gradle モジュール選択コンボの中身 -->
			<excludeTrace className="com.intellij.ui.GroupedElementsRenderer"/>

			<!-- 呼び出しトレースによる除外：Javadoc ドキュメント : クイック・ビューのタイトル -->
			<excludeTrace className="com.intellij.codeInsight.hint.ElementLocationUtil"/>

			<!-- 呼び出しトレースによる除外：プロジェクト構造 > モジュール > 除外ディレクトリ > "build" -->
			<excludeTrace className="com.intellij.openapi.roots.ui.configuration.ContentRootPanel" methodName="a"/>
			<excludeTrace className="com.intellij.ui.roots.FilePathClipper"/>

			<!-- 呼び出しトレースによる除外：モジュール設定 > ソース > コンテンツルートリンクのホバー時 -->
			<excludeTrace className="com.intellij.ui.HoverHyperlinkLabel$1" methodName="mouseEntered"/>

			<!-- 呼び出しトレースによる除外：設定 > 言語 & フレームワーク > スタイルシート > Compass -->
			<excludeTrace className="com.intellij.ui.ListCellRendererWrapper"/>

			<!-- 呼び出しトレースによる除外：バージョン管理ビュー > ログタブ > ブランチ名ポップアップ -->
			<excludeTrace className="com.intellij.vcs.log.ui.frame.ReferencesPanel"/>

			<!-- 呼び出しトレースによる除外：ドキュメント -->
			<excludeTrace className="com.intellij.ui.DocumentAdapter"/>

			<!-- 呼び出しトレースによる除外：Git マージ、タグダイアログ > 現在のブランチ名 -->
			<excludeTrace className="git4idea.util.GitUIUtil" methodName="setupRootChooser"/>

			<!-- 呼び出しトレースによる除外：Android ようこそ画面の Version (バージョンという日本語が消える) -->
			<excludeTrace className="com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrame$FlatWelcomeScreen"/>

			<!-- 呼び出しトレースによる除外：Android デザイナーの UI プロパティー -->
			<excludeTrace className="com.android.tools.idea.uibuilder.property.inspector.InspectorPanel"
						  methodName="createLabel"/>

			<!-- 呼び出しトレースによる除外：Android モデル・ツールウィンドウ > プロジェクト名 -->
			<excludeTrace className="com.android.tools.idea.gradle.util.ui.Header"/>

			<!-- ******************************* -->

			<!-- 呼び出しトレースによる限定：新規プロジェクト or モジュール作成ダイアログの左ツリー -->
			<includeTrace className="com.intellij.ide.projectWizard.ProjectTypeStep" limit="0"/>

			<!-- 呼び出しトレースによる限定：モジュール設定 > 左ツリー -->
			<includeTrace className="com.intellij.openapi.roots.ui.configuration.SidePanel"/>

			<!-- 呼び出しトレースによる限定：設定 > エディター > コード・スタイル > 折り返しおよび括弧 -->
			<includeTrace className="com.intellij.application.options.codeStyle.OptionTableWithPreviewPanel"/>

			<!-- 呼び出しトレースによる限定：設定 > 外観 & 振る舞い > 通知 > グループ (プルダウンは after 定義) -->
			<includeTrace className="com.intellij.notification.impl.ui.NotificationsConfigurablePanel"/>

			<!-- 呼び出しトレースによる限定：設定 > エディター > ファイル・エンコーディング > 一覧のエンコード -->
			<includeTrace className="com.intellij.openapi.vfs.encoding.EncodingFileTreeTable"/>

			<!-- 呼び出しトレースによる限定：構成 > ライセンスの管理 > Fotgot? -->
			<includeTrace className="com.intellij.ide.actions.RegisterAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外あり、ニーモニックなし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, ?{JOINT_POINT});
		]]></advice>

		<!-- AWT フレームのタイトル (ようこそ画面) - around だと動作しない -->
		<jointPoint className="java.awt.Frame" methodName="setTitle">

			<!-- 呼び出しトレースによる除外：メイン画面のタイトル - プロジェクト名 -->
			<excludeTrace className="com.intellij.openapi.wm.impl.IdeFrameImpl"/>

		</jointPoint>

		<!-- シンプルカラードコンポーネント (呼び出し箇所が多いため限定) -->
		<jointPoint className="com.intellij.ui.SimpleColoredComponent" methodName="append"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;)V">

			<!-- 呼び出しトレースによる限定：設定の左ツリー -->
			<includeTrace className="com.intellij.openapi.options.newEditor.SettingsTreeView"/>

			<!-- 呼び出しトレースによる限定：設定 > エディター > インスペクション > ツリー -->
			<includeTrace className="com.intellij.profile.codeInspection"/>

			<!-- 呼び出しトレースによる限定：JUnit の結果メッセージ -->
			<includeTrace className="com.intellij.execution.testframework.ui.TestStatusLine"/>

			<!-- 呼び出しトレースによる限定：インスペクション結果のツリー > インスペクション名 -->
			<includeTrace className="com.intellij.codeInspection.ui.InspectionTree"/>

			<!-- 呼び出しトレースによる限定：ブレークポイントのプロパティー > Any exception -->
			<includeTrace className="com.intellij.xdebugger.impl.breakpoints.XBreakpointItem"/>

			<!-- 呼び出しトレースによる限定：Gradle タスク右クリック > Choose a task to 〜 -->
			<includeTrace className="com.intellij.openapi.keymap.impl.ui.ActionsTree$KeymapsRenderer"
						  methodName="append"/>

			<!-- 呼び出しトレースによる限定：パス内検索 > タブ:Preview -->
			<!-- → build.gradle のエディタータブが訳されるため含めてはいけない - JBTabsPaneImpl で対応
			<includeTrace className="com.intellij.ui.tabs.impl.TabLabel"/>
			-->

			<!-- 呼び出しトレースによる限定：Android デバイス選択肢 -->
			<includeTrace className="com.android.tools.idea.ddms"/>

			<!-- 呼び出しトレースによる限定：Android 実行 > 構成の編集 > ターゲット選択プルダウン など -->
			<includeTrace className="com.android.tools.idea.run.editor"/>

		</jointPoint>

		<!-- ダイアログのタイトル -->
		<jointPoint className="com.intellij.openapi.ui.impl.DialogWrapperPeerImpl" methodName="setTitle">

			<!-- 呼び出しトレースによる除外：デバッグ > 配列 > 範囲の調整ダイアログのタイトル (変数名) -->
			<excludeTrace className="com.intellij.debugger.actions.AdjustArrayRangeAction"/>

		</jointPoint>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外あり - メニュー、ボタン、チェックボックスなど -->
	<!--
	-->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			// チェックボックスやラジオボタン、クラスが JButton の場合は除外定義を使用しない
			if ($0 instanceof javax.swing.JToggleButton || $0.getClass().getName().equals("javax.swing.JButton"))
				$1 = ?{translation.class}.translate($1, null);
			// JMenuItem (git コミットダイアログのコミットボタンメニュー)
			else if ($1 != null && $1.endsWith("..."))
				$1 = ?{translation.class}.translate($1, null);
			// ----- ↓高速化のため使用しない (JOINT_POINT を渡さない限り除外定義は使用されない) -----
			// JMenuItem、JButton サブクラス (コンボなど) の場合は除外定義を使用する
			//else
			//	?{translation.class}.printStackTrace($1, ?{JOINT_POINT});
			//	$1 = ?{translation.class}.translate($1, ?{JOINT_POINT});
		]]></advice>

		<!-- Swing ボタン (高速化と訳しすぎ防止のため excludeTrace は使用しない) -->
		<jointPoint className="javax.swing.AbstractButton" methodName="setText"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) エディタータブの "[プロジェクト名] パス" の形式は翻訳しない -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($1 != null && !$1.matches("\\[.+\\] .+"))
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- Swing ツールチップ -->
		<jointPoint className="javax.swing.JComponent" methodName="setToolTipText"/>

		<!-- ツールチップ (リファクタリング > インライン化 などのエラーメッセージ) -->
		<jointPoint className="com.intellij.ide.IdeTooltipManager" methodName="initPane"
					descriptor="(Ljava/lang/String;Lcom/intellij/ui/HintHint;Ljavax/swing/JLayeredPane;)Ljavax/swing/JEditorPane;"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) コロンの前のみ翻訳 (Current Branch: ブランチ名) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			String[] sp = ($1 == null) ? (String[]) null : $1.split(":");
			if (sp != null && sp.length == 2)
				$1 = ?{translation.class}.translateIgnoreMnemonic(sp[0], null) + ":" + sp[1];
			else
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- 右下 Git クリック時のポップアップ -->
		<jointPoint className="com.intellij.ui.popup.AbstractPopup" methodName="setAdText"
					descriptor="(Ljava/lang/String;I)V"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) コミットダイアログの browse リンク -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($2 == com.intellij.ui.SimpleTextAttributes.LINK_ATTRIBUTES)
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<jointPoint className="com.intellij.ui.ColoredTreeCellRenderer" methodName="append"
			descriptor="(Ljava/lang/String;Lcom/intellij/ui/SimpleTextAttributes;Z)V"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数) 呼び出しトレースによる除外なし - モジュール名を示す、末尾 [] 内は翻訳しない -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			int pos = ($1 != null) ? $1.indexOf("[") : -1;
			if (pos != -1)
				$1 = ?{translation.class}.translateIgnoreMnemonic($1.substring(0, pos), null) + $1.substring(pos, $1.length());
			else
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
		]]></advice>

		<!-- 下部プログレスバー -->
		<jointPoint className="com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase" methodName="setText"/>
		<jointPoint className="com.intellij.openapi.progress.util.AbstractProgressIndicatorExBase" methodName="setText2"/>

	</pointCut>

	<!-- 翻訳 (before・1 引数) 呼び出しトレースによる除外あり - 編集不可の場合のみ -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if (!$0.isEditable())
				$1 = ?{translation.class}.translateIgnoreMnemonic($1, ?{JOINT_POINT});
		]]></advice>

		<!-- Swing エディター・ペイン (HTML ラベル) -->
		<jointPoint className="javax.swing.JEditorPane" methodName="setText">

			<!-- 呼び出しトレースによる除外：データベース結果 > クエリーの表示 > 内容表示 (Click to refresh) -->
			<excludeTrace className="com.intellij.codeInsight.documentation.DocumentationComponent"/>

		</jointPoint>

		<!-- Swing テキストコンポーネント -->
		<jointPoint className="javax.swing.text.JTextComponent" methodName="setText">

			<!-- 呼び出しトレースによる除外：モジュール右クリック > 分析 > モジュール依存関係の分析 > モジュール名 -->
			<excludeTrace className="com.intellij.moduleDependencies.ModulesDependenciesPanel"/>

			<!-- 呼び出しトレースによる除外：ツール > 外部ツール > 追加 > マクロダイアログ > プレビュー -->
			<excludeTrace className="com.intellij.ide.macro.MacrosDialog"/>

			<!-- 呼び出しトレースによる除外：VCS > プロジェクトの更新 > Subversion ダイアログ -->
			<excludeTrace className="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialog"/>

		</jointPoint>

	</pointCut>

	<!-- 検索結果 v2017 (before・第 1 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($1 != null)
				$1 = $1.replaceAll("(\\d+\\+? 件一致) in (\\d+\\+? ファイル)", "$2中 $1");
		]]></advice>

		<!-- パス内検索の検索条件テキスト右側 : 'n 件一致 in n ファイル' -->
		<jointPoint className="com.intellij.find.SearchTextArea" methodName="setInfoText"/>

	</pointCut>

	<!-- 検索結果 v2016 (before・第 2 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			if ($2 != null && ($2.startsWith("Preview") || $2.contains("件一致 in ")))
				$2 = $2
					.replaceAll("(.+\\()(\\S+ 件一致) in (\\S+ ファイル)(\\))", "$1$3中 $2$4")
					.replace("Preview", "プレビュー");
		]]></advice>

		<!-- パス内検索結果のプレビュータブ : 'Preview (n 件一致 in n ファイル)' -->
		<jointPoint className="com.intellij.ui.JBTabsPaneImpl" methodName="setTitleAt"/>

	</pointCut>

	<!-- 翻訳 (before・第 2 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
		]]></advice>

		<!-- エディター部の初期表示のショートカット説明 -->
		<jointPoint className="com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter" methodName="appendLine"/>
		<jointPoint className="com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter" methodName="appendAction"/>

		<!-- 設定 > ツール > リモート SSH 外部ツール > ＋ > マクロの挿入 -->
		<jointPoint className="com.intellij.ide.macro.EditorMacro" methodName="EditorMacro"
					descriptor="(Ljava/lang/String;Ljava/lang/String;)V"/>

		<!-- お気に入りのリストラベル (Bookmarks、Breakpoints) -->
		<jointPoint className="com.intellij.ide.favoritesTreeView.AbstractFavoritesListProvider"
					methodName="AbstractFavoritesListProvider"
					descriptor="(Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/lang/String;)V"/>

		<!-- Android 実行構成ダイアログのエラーメッセージ -->
		<jointPoint className="com.android.tools.idea.run.ValidationError" methodName="ValidationError"/>

		<!-- Android AVD 一覧右クリック -->
		<jointPoint className="com.android.tools.idea.avdmanager.AvdUiAction" methodName="AvdUiAction"/>

		<!-- Android メッセージビューの Gradle メッセージ  -->
		<jointPoint className="com.android.ide.common.blame.Message" methodName="Message"/>

	</pointCut>

	<!-- 翻訳 (before・第 3 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$3 = ?{translation.class}.translateIgnoreMnemonic($3, null);
		]]></advice>

		<!-- 文字列のセンタリング描画 -->
		<jointPoint className="com.intellij.util.ui.UIUtil"
					methodName="drawCenteredString"
					descriptor="(Ljava/awt/Graphics2D;Ljava/awt/Rectangle;Ljava/lang/String;ZZ)V"/>

	</pointCut>

	<!-- 翻訳 (before・1 2 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
		]]></advice>

		<!-- 分析 > 各分析ダイアログの分析名 -->
		<jointPoint className="com.intellij.analysis.BaseAnalysisAction" methodName="BaseAnalysisAction"/>

		<!-- ダイアログ Windows (設定 > 外観 & 振る舞い > システム設定 > HTTP プロキシー > テスト など) -->
		<jointPoint className="com.intellij.openapi.ui.Messages$MessageDialog" methodName="_init"/>

	</pointCut>

	<!-- 翻訳 (before・1 2 3 引数) 呼び出しトレースによる除外なし - 第 3 引数が句読点の場合は除去 -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
			if ($3.equals(".") || $3.equals(".)"))
				$3 = "";
			else
				$3 = ?{translation.class}.translateIgnoreMnemonic($3, null);
		]]></advice>

		<!-- ハイパーリンクテキスト -->
		<jointPoint className="com.intellij.ui.HyperlinkLabel" methodName="setHyperlinkText"
			descriptor="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"/>

	</pointCut>

	<!-- 翻訳 (before・1 2 6 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$1 = ?{translation.class}.translateIgnoreMnemonic($1, null);
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
			$6 = ?{translation.class}.translateIgnoreMnemonic($6, null);
		]]></advice>

		<!-- 設定 > エディター > 色とフォント > ツリー -->
		<jointPoint className="com.intellij.application.options.colors.ColorAndFontDescription"
			methodName="ColorAndFontDescription"/>

	</pointCut>

	<!-- 翻訳 (before・2 3 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$2 = ?{translation.class}.translateIgnoreMnemonic($2, null);
			$3 = ?{translation.class}.translateIgnoreMnemonic($3, null);
		]]></advice>

		<!-- 通知 -->
		<jointPoint className="com.intellij.notification.Notification" methodName="Notification"
			descriptor="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/intellij/notification/NotificationType;Lcom/intellij/notification/NotificationListener;)V"/>

		<!-- ダイアログ Mac (設定 > 外観 & 振る舞い > システム設定 > HTTP プロキシー > テスト など) -->
		<jointPoint className="com.intellij.ui.messages.SheetMessage" methodName="SheetMessage"/>

		<!-- 設定 > ビルド > ビルドツール > JDK プルダウン -->
		<jointPoint className="com.intellij.openapi.externalSystem.service.ui.ExternalSystemJdkComboBox$JdkComboBoxItem"
					methodName="JdkComboBoxItem"/>

	</pointCut>

	<!-- 翻訳 (before・3 4 5 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$3 = ?{translation.class}.translateIgnoreMnemonic($3, null);
			$4 = ?{translation.class}.translateIgnoreMnemonic($4, null);
			$5 = ?{translation.class}.translateIgnoreMnemonic($5, null);
		]]></advice>

		<!-- 通知 -->
		<jointPoint className="com.intellij.notification.Notification" methodName="Notification"
					descriptor="(Ljava/lang/String;Ljavax/swing/Icon;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/intellij/notification/NotificationType;Lcom/intellij/notification/NotificationListener;)V"/>

	</pointCut>

	<!-- 翻訳 (before・4 5 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$4 = ?{translation.class}.translateIgnoreMnemonic($4, null);
			$5 = ?{translation.class}.translateIgnoreMnemonic($5, null);
		]]></advice>

		<!-- エディター上の警告ホバー (Redundant character escape など) -->
		<jointPoint className="com.intellij.lang.annotation.Annotation" methodName="Annotation"/>

	</pointCut>

	<!-- 翻訳 (before・第 4 引数) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			$4 = ?{translation.class}.translateIgnoreMnemonic($4, null);
		]]></advice>

		<!-- ガターのツールチップ Click or press x to navigate -->
		<jointPoint className="com.intellij.codeInsight.daemon.impl.GutterIconTooltipHelper" methodName="composeText"
					descriptor="(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"/>

	</pointCut>

	<!-- 翻訳 (before・第 1 引数、List<String>) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			for (int i = 0; i < $1.size(); i++) {
				String s = ?{translation.class}.translateIgnoreMnemonic($1.get(i), null);
				$1.set(i, s);
			}
		]]></advice>

		<!-- 使用箇所の検索 -->
		<jointPoint className="com.intellij.usages.impl.SearchForUsagesRunnable" methodName="wrapInHtml"/>

	</pointCut>

	<!--
	===========================================================================
	  after
	===========================================================================
	-->

	<!--
	起動時の例外抑止の翻訳しない (下記除外定義だと起動時に複数回呼ばれ、スタックトレースで遅いため)
	%EXCLUDE%Constructor=idea:com.intellij.codeInspection.ex.InspectionToolWrapper
	-->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			return "Constructor";
		]]></advice>

		<jointPoint className="com.google.gct.idea.appengine.validation.ConstructorInspection"
					methodName="getShortName"/>

	</pointCut>

	<!-- 翻訳 (after) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			return ?{translation.class}.translateUnderscoreMnemonic($_, null);
		]]></advice>

		<!-- Run 〜 with Coverage (Presentation#setText が呼ばれないため) -->
		<jointPoint className="com.intellij.coverage.CoverageExecutor" methodName="getStartActionText"/>

	</pointCut>

	<!-- 翻訳 (after) 呼び出しトレースによる除外なし、ニーモニックなし -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			return ?{translation.class}.translateIgnoreMnemonic($_, null);
		]]></advice>

		<!-- ツール・ウィンドウのストライプ・ボタン -->
		<jointPoint className="com.intellij.openapi.wm.impl.ToolWindowImpl" methodName="getStripeTitle"/>

		<!-- 設定 > ツリー (LangExtensions.xml などに定義されている displayName 属性) -->
		<jointPoint className="com.intellij.openapi.options.ex.ConfigurableWrapper" methodName="getDisplayName"/>

		<!-- インスペクションのメッセージ -->
		<jointPoint className="com.intellij.codeInspection.ProblemDescriptorUtil" methodName="renderDescriptionMessage"
			descriptor="(Lcom/intellij/codeInspection/CommonProblemDescriptor;Lcom/intellij/psi/PsiElement;I)Ljava/lang/String;"/>

		<!-- インテンションのメッセージ -->
		<jointPoint className="com.intellij.codeInsight.intention.impl.IntentionListStep" methodName="getTextFor"/>

		<!-- プロジェクトウィンドウのスコープ選択コンボ (getTabName だけで良いが他は念のため) -->
		<jointPoint className="com.intellij.ui.content.impl.ContentImpl" methodName="getTabName"/>
		<jointPoint className="com.intellij.ui.content.impl.ContentImpl" methodName="getDisplayName"/>
		<jointPoint className="com.intellij.ui.content.impl.ContentImpl" methodName="getToolwindowTitle"/>
		<jointPoint className="com.intellij.ui.content.impl.ContentImpl" methodName="getDescription"/>

		<!-- 使用箇所の検索で見つからない場合 - <br><a ...>Find Options... -->
		<jointPoint className="com.intellij.usages.impl.SearchForUsagesRunnable" methodName="createOptionsHtml"/>

		<!-- ガター行ツールチップ (Android Studio のアクティビティー '関連 XML ファイル') -->
		<jointPoint className="com.intellij.codeInsight.daemon.LineMarkerInfo" methodName="getLineMarkerTooltip"/>

		<!-- 設定 > 外観 & 振る舞い > 通知 > プルダウン (enum) -->
		<jointPoint className="com.intellij.notification.NotificationDisplayType" methodName="getTitle"/>

		<!-- インスペクション結果 (左ツリー) > n warnings (ソースメソッド名 getPresentableName) -->
		<jointPoint className="com.intellij.codeInspection.ui.InspectionTreeTailRenderer" methodName="a"
					descriptor="(Lcom/intellij/codeHighlighting/HighlightDisplayLevel;Z)Ljava/lang/String;"/>

		<!-- モジュール > 実行 > All Tests (TestNG) -->
		<jointPoint className="com.theoryinpractice.testng.model.TestNGTestPackage" methodName="getActionName"/>

		<!-- ファイル削除確認ダイアログの file、directory、element など -->
		<jointPoint className="com.intellij.ide.util.DeleteTypeDescriptionLocation$DefaultProvider"
			methodName="getElementDescription"/>

		<!-- キーマップ > リモート外部ツール (Group コンストラクタだと Ant プロジェクト名が翻訳されるため) -->
		<jointPoint className="com.jetbrains.plugins.remotesdk.tools.RemoteToolKeymapExtension" methodName="getGroupName"/>

		<!-- 設定 > プラグイン > ボタンラベル -->
		<jointPoint className="com.intellij.ide.plugins.PluginHeaderPanel$1" methodName="getText"/>

		<!-- インテンションダイアログ > ツリーのインテンション名 -->
		<jointPoint className="com.intellij.codeInsight.intention.impl.config.IntentionActionWrapper"
					methodName="getFamilyName"/>

		<!-- Vim 設定 > その他 > Vim エミュレーション > プルダウン (enum) -->
		<jointPoint className="com.maddyhome.idea.vim.key.ShortcutOwner" methodName="toString"/>

		<!-- Android モジュール設定 (Android Studio) > 左ツリー -->
		<jointPoint className="com.android.tools.idea.gradle.structure.AndroidProjectStructureConfigurable$SidePanel$1"
					methodName="getTextFor"/>

		<!-- Android 設定 > 外観 > システム設定 > Android SDK > 状況 (Installed、Not installed) -->
		<jointPoint className="com.android.tools.idea.updater.configure.StatusColumnInfo" methodName="valueOf"/>

	</pointCut>

	<!-- 翻訳 (after) 実行構成ツリー -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			if ($1 instanceof com.intellij.execution.configurations.ConfigurationType)
				$_ = ?{translation.class}.translateIgnoreMnemonic($_, null);
		]]></advice>

		<!-- 実行構成 > Defaults ツリー配下 (ソースメソッド名 getName) -->
		<jointPoint className="com.intellij.execution.impl.RunConfigurable" methodName="b"
					descriptor="(Ljava/lang/Object;)Ljava/lang/String;"/>

	</pointCut>

	<!-- 設定 (after フォントサンプル) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			return $_.replaceFirst("\n\n\n$", "") +
				"色は匂へど散りぬるを我が世誰そ常ならむ\n" +
				"== != === !== >= <= && || ++ -- =>\n" +
				"\n\n";
		]]></advice>

		<!-- 設定 > エディター > 色とフォント > フォント > サンプル -->
		<jointPoint className="com.intellij.application.options.colors.FontEditorPreview" methodName="getIDEDemoText"/>

	</pointCut>

	<!-- 設定 (after PhpStorm 外部ドキュメント URL ja 化) 呼び出しトレースによる除外なし -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			for (int i = 0; i < $_.size(); i++)
				$_.set(i, ((String) $_.get(i)).replace("/en/", "/ja/").replace("&lang=en", "&lang=ja"));
		]]></advice>

		<jointPoint className="com.jetbrains.php.lang.documentation.PhpDocumentationProvider" methodName="getUrlFor"/>

	</pointCut>

	<!-- デバッグ (after) ツールウィンドウ id -->
	<!--
	<pointCut editPoint="execution" timing="after" level="debug">
		<advice><![CDATA[
			?{translation.class}.debug("ToolWindowManager#getToolWindow: " + $1 + " -> " + $_);
			return $_;
		]]></advice>
		<jointPoint className="com.intellij.openapi.wm.impl.ToolWindowManagerImpl" methodName="getToolWindow"/>
	</pointCut>
	-->

	<!--
    ###########################################################################
	  デバッグ
    ###########################################################################
	-->

	<!-- 時間計測ログ -->
	<pointCut editPoint="call" timing="around" level="debug">
		<advice><![CDATA[
			?{analyses.class}.start(?{TARGET_STRING});
			$_ = $proceed($$);
			?{analyses.class}.end(?{TARGET_STRING});
		]]></advice>
		<jointPoint className="jp.sourceforge.mergedoc.pleiades"/>
	</pointCut>

	<!-- デバッグ (before) [呼び出し部分] -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			?{translation.class}.debug($1, ?{JOINT_POINT});
			$_ = $proceed($$);
		]]></advice>
	</pointCut>

	<!-- デバッグ (after) [呼び出し部分] -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			$_ = $proceed($$);
			?{translation.class}.debug($_, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before-after) [呼び出し部分] -->
	<pointCut editPoint="call" timing="around">
		<advice><![CDATA[
			?{translation.class}.debug($1, ?{JOINT_POINT});
			$_ = $proceed($$);
			?{translation.class}.debug($_, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before・引数指定なし) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.debug(null, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before・第 1 引数) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.debug($1, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before・第 2 引数) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.debug($2, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before・第 3 引数) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.debug($3, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (before・第 4 引数) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.debug($4, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!-- デバッグ (after) -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			?{translation.class}.debug($_, ?{JOINT_POINT});
			return $_;
		]]></advice>
	</pointCut>

	<!-- スタックトレース (after) -->
	<pointCut editPoint="execution" timing="after">
		<advice><![CDATA[
			?{translation.class}.printStackTrace($_, ?{JOINT_POINT});
			return $_;
		]]></advice>
	</pointCut>

	<!-- スタックトレース (before) -->
	<pointCut editPoint="execution" timing="before">
		<advice><![CDATA[
			?{translation.class}.printStackTrace($1, ?{JOINT_POINT});
		]]></advice>
	</pointCut>

	<!--
    ###########################################################################
	  翻訳トレース (Pleiades 起動オプション debug 時のみ有効)
    ###########################################################################
    TraceConfig 参照
	-->

	<property name="trace.pattern" value=""/>
	<property name="trace.is.ja" value="false"/>
	<property name="trace.disabled" value="false"/>
	<property name="log.desc.class" value=""/>

</pleiades>
